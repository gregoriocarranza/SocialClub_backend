openapi: 3.0.0
info:
  title: Social_web_V1
  description: ''
  version: 1.0.0

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/GregorioCarranzaTorres/Social_web_V1/1.0.0/api
  - description: SwaggerHub API Auto Mocking V2
    url: https://virtserver.swaggerhub.com/GregorioCarranzaTorres/Social_web_V2/2.0.0/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  # ------------------------------Schemas------------------------------

  schemas:
    GeneralResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operación fue exitosa
          example: true
        message:
          type: string
          description: Mensaje descriptivo de la respuesta
          example: 'Correo enviado exitosamente'
        data:
          type: object
          description: Objeto de la respuesta (si existiera) o null
          example:
            nombre: 'John'
            apellido: 'Doe'
            nickname: 'johndoe123'
            biografía: 'Desarrollador apasionado de la tecnología.'

    FeedEntity:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    Post:
      type: object
      properties:
        postId:
          type: integer
          example: 123
        title:
          type: string
          example: 'Aventuras en la naturaleza'
        text:
          type: string
          example: '¡Explorando los vastos bosques!'
        multimediaUrl:
          type: string
          example: 'https://example.com/image.jpg'
        commentsCount:
          type: integer
          example: 5
        likesCount:
          type: integer
          example: 120
        creationDate:
          type: string
          format: date-time
          example: '2021-07-16T19:20:30Z'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          description: Código de error HTTP o personalizado
          example: 400
        message:
          type: string
          description: Descripción del error
          example: 'Solicitud incorrecta'
        timestamp:
          type: integer
          description: Marca de tiempo en formato Unix
          example: 1633017600

security:
  - bearerAuth: []

tags:
  - name: 'Auth'
    description: 'Operaciones relacionadas con la autenticación'
  - name: 'User'
    description: 'Operaciones relacionadas con usuarios'
  - name: 'Following/Followers'
    description: 'Operaciones relacionadas con Seguidores/Seguidos'
  - name: 'Posts'
    description: 'Operaciones relacionadas con los posteos'

paths:
  #------------------------ Auth Routes ------------------------#

  /auth/login:
    post:
      tags:
        - 'Auth'
      summary: 'Login de usuario'
      description: 'Autentica al usuario y devuelve un token JWT.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'example@example.com'
                password:
                  type: string
                  example: 'securePassword123'
      responses:
        '200':
          description: 'Exitoso'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
        '404':
          description: 'Recurso no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Recurso no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /auth/register:
    post:
      tags:
        - 'Auth'
      summary: 'Registro de usuario'
      description: 'Registra un nuevo usuario.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'example@example.com'
                firstname:
                  type: string
                  example: 'John'
                lastname:
                  type: string
                  example: 'Doe'
                password:
                  type: string
                  example: 'securePassword123'
      responses:
        '201':
          description: 'Exitoso'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InternalServerErrorExample:
                  value:
                    success: false
                    code: 500
                    message: 'Error interno del servidor'
                    timestamp: 1633017600

        '400':
          description: 'Solicitud incorrecta'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequestExample:
                  value:
                    success: false
                    code: 400
                    message: 'Solicitud incorrecta'
                    timestamp: 1633017600

  /auth/logout:
    post:
      tags:
        - 'Auth'
      summary: 'Logout de usuario'
      description: 'Cierra la sesión del usuario.'
      responses:
        '200':
          description: 'Sesión cerrada'
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
  /auth/forgot_password:
    post:
      tags:
        - 'Auth'
      summary: Enviar correo de restablecimiento de contraseña
      description: Envía un correo para restablecer la contraseña del usuario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'example@example.com'
      responses:
        '200':
          description: Correo enviado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
        '404':
          description: 'Recurso no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Recurso no encontrado'
                    timestamp: 1633017600
        '400':
          description: Error en el correo proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 400
                    message: 'No autorizado'
                    timestamp: 1633017600

  /auth/reset_password:
    post:
      tags:
        - 'Auth'
      summary: Restablecer contraseña
      description: Permite al usuario restablecer su contraseña utilizando un token de restablecimiento.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contraseña:
                  type: string
                  example: 'newSecurePassword123'
      responses:
        '200':
          description: Contraseña restablecida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
        '404':
          description: 'Recurso no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Recurso no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  #------------------------ User Routes ------------------------#

  /user/jwt:
    get:
      tags:
        - 'User'
      summary: 'Obtener usuario por JWT'
      description: 'Devuelve la información del usuario asociado al JWT.'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 'Información del usuario'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Información del usuario obtenida exitosamente'
                    data:
                      nombre: 'John'
                      apellido: 'Doe'
                      nickname: 'johndoe123'
                      biografía: 'Desarrollador apasionado de la tecnología.'
                      seguidores: ['user1', 'user2']
                      seguidos: ['user3', 'user4']
                      nivel: 10
                      posts: ['post1', 'post2']
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /user/{userUuid}:
    get:
      tags:
        - 'User'
      summary: 'Obtener usuario por UUID'
      description: 'Devuelve la información del usuario por su UUID.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Información del usuario'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Información del usuario obtenida exitosamente'
                    data:
                      nombre: 'John'
                      apellido: 'Doe'
                      nickname: 'johndoe123'
                      biografía: 'Desarrollador apasionado de la tecnología.'
                      seguidores: ['user1', 'user2']
                      seguidos: ['user3', 'user4']
                      nivel: 10
                      posts: ['post1', 'post2']
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
        '404':
          description: 'Recurso no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Recurso no encontrado'
                    timestamp: 1633017600
    put:
      tags:
        - 'User'
      summary: 'Actualizar mis datos de usuario'
      description: 'Permite actualizar los datos de perfil del usuario autenticado.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: 'John'
                apellido:
                  type: string
                  example: 'Doe'
                nickname:
                  type: string
                  example: 'johndoe123'
                biografía:
                  type: string
                  example: 'Desarrollador apasionado de la tecnología.'
                genero:
                  type: string
                  example: 'Masculino'
                fotoPerfil:
                  type: string
                  example: 'https://example.com/perfil.jpg'
                fotoPortada:
                  type: string
                  example: 'https://example.com/portada.jpg'
      responses:
        '200':
          description: 'Datos del usuario actualizados exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Datos del usuario actualizados exitosamente'
        '400':
          description: 'Solicitud inválida'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequestExample:
                  value:
                    success: false
                    code: 400
                    message: 'Solicitud inválida'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /user/search:
    get:
      tags:
        - 'User'
      summary: 'Buscar a un usuario por nickname'
      description: 'Busca a un usuario en el sistema mediante su nickname.'
      parameters:
        - name: nickname
          in: query
          required: true
          schema:
            type: string
          example: 'johndoe123'
      responses:
        '200':
          description: 'Usuario encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Usuario encontrado exitosamente'
                    data:
                      usuario:
                        nickname: 'johndoe123'
                        nombre: 'John'
                        apellido: 'Doe'
                        biografía: 'Desarrollador apasionado de la tecnología.'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /user/{userUuid}/followers:
    get:
      tags:
        - 'Following/Followers'
      summary: 'Obtener lista de seguidores'
      description: 'Devuelve la lista de seguidores de un usuario por su UUID.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Lista de seguidores obtenida'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Lista de seguidores obtenida exitosamente'
                    data:
                      seguidores:
                        - 'user1'
                        - 'user2'
                        - 'user3'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
    delete:
      tags:
        - 'Following/Followers'
      summary: 'Eliminar un seguidor'
      description: 'Elimina a un usuario de la lista de seguidores.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Seguidor eliminado exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Seguidor eliminado exitosamente'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /user/{userUuid}/following:
    get:
      tags:
        - 'Following/Followers'
      summary: 'Obtener lista de seguidos'
      description: 'Devuelve la lista de usuarios seguidos por el usuario por su UUID.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Lista de seguidos obtenida'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Lista de seguidos obtenida exitosamente'
                    data:
                      seguidos:
                        - 'user3'
                        - 'user4'
                        - 'user5'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
    post:
      tags:
        - 'Following/Followers'
      summary: 'Seguir a un usuario'
      description: 'Agrega a un usuario a la lista de seguidos.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Usuario seguido exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Usuario seguido exitosamente'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
    delete:
      tags:
        - 'Following/Followers'
      summary: 'Dejar de seguir a un usuario'
      description: 'Elimina a un usuario de la lista de seguidos.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Usuario eliminado de seguidos exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Usuario eliminado de seguidos exitosamente'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /user/favorites/{userUuid}:
    post:
      tags:
        - 'Following/Followers'
      summary: 'Agregar o eliminar a un usuario de favoritos'
      description: 'Agrega o elimina a un usuario de la lista de favoritos.'
      parameters:
        - name: userUuid
          in: path
          required: true
          schema:
            type: integer
          example: 12345
      responses:
        '200':
          description: 'Favoritos actualizados exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Favoritos actualizados exitosamente'
                    data:
                      favoritos:
                        - 'user1'
                        - 'user2'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Usuario no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /posts/feed:
    get:
      tags:
        - 'Posts'
      summary: 'Obtener el feed'
      description: 'Devuelve una lista paginada de posts para el feed del usuario.'
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            description: 'Número de página para la paginación del feed.'
        - name: count
          in: query
          required: false
          schema:
            type: integer
            default: 1
            description: 'Número de página para la paginación del feed.'
      responses:
        '200':
          description: 'Feed obtenido exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Feed obtenido exitosamente'
                    data:
                      $ref: '#/components/schemas/FeedEntity'
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600

  /posts/{postUuid}:
    get:
      tags:
        - 'Posts'
      summary: 'Obtener Un posteo'
      description: 'Devuelve un posteo segun su UUID'
      parameters:
        - name: postUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 'Posteo obtenido exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Posteo obtenido exitosamente'
                    data:
                      $ref: '#/components/schemas/Post'
        '404':
          description: 'Posteo no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Posteo no encontrado'
                    timestamp: 1633017600
    put:
      tags:
        - 'Posts'
      summary: 'Actualizar un post'
      description: 'Permite al usuario actualizar un post existente.'
      security:
        - bearerAuth: []
      parameters:
        - name: postUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
            example:
              title: 'Aventuras en la naturaleza'
              text: '¡Explorando los vastos bosques!'
              multimediaUrl: 'https://example.com/image.jpg'
              commentsCount: 5
              likesCount: 120
              creationDate: '2021-07-16T19:20:30Z'
      responses:
        '200':
          description: 'Post actualizado exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Post actualizado exitosamente'
                    data:
                      $ref: '#/components/schemas/Post'
        '404':
          description: 'Post no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Post no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
    delete:
      tags:
        - 'Posts'
      summary: 'Eliminar un post'
      description: 'Permite al usuario eliminar un post existente.'
      security:
        - bearerAuth: []
      parameters:
        - name: postUuid
          in: path
          required: true
          schema:
            type: string
          example: '66a3e747-2065-49ed-bb62-50ac084742bf'
      responses:
        '200':
          description: 'Post eliminado exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              examples:
                SuccessfulResponse:
                  value:
                    success: true
                    message: 'Post eliminado exitosamente'
        '404':
          description: 'Post no encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NotFoundExample:
                  value:
                    success: false
                    code: 404
                    message: 'Post no encontrado'
                    timestamp: 1633017600
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnauthorizedExample:
                  value:
                    success: false
                    code: 401
                    message: 'No autorizado'
                    timestamp: 1633017600
